"""split_full_name_into_first_last_name

Revision ID: c7d255e5a5a1
Revises: f8a9cdd0f2fe
Create Date: 2025-09-20 16:08:46.819535

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c7d255e5a5a1'
down_revision: Union[str, Sequence[str], None] = 'f7fabaad017b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('educations', 'start_year',
               existing_type=sa.VARCHAR(length=7),
               type_=sa.String(length=4),
               existing_nullable=True)
    op.alter_column('educations', 'end_year',
               existing_type=sa.VARCHAR(length=7),
               type_=sa.String(length=4),
               existing_nullable=True)
    
    # Разделяем full_name на отдельные поля
    # Добавляем новые поля
    op.add_column('employees', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('employees', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('employees', sa.Column('middle_name', sa.String(), nullable=True))
    
    # Переносим данные из full_name в новые поля
    # Для существующих записей разделяем по пробелу
    op.execute("""
        UPDATE employees 
        SET 
            first_name = split_part(full_name, ' ', 1),
            last_name = split_part(full_name, ' ', 2),
            middle_name = CASE 
                WHEN array_length(string_to_array(full_name, ' '), 1) > 2 
                THEN split_part(full_name, ' ', 3)
                ELSE NULL 
            END
        WHERE full_name IS NOT NULL
    """)
    
    # Делаем поля обязательными
    op.alter_column('employees', 'first_name', nullable=False)
    op.alter_column('employees', 'last_name', nullable=False)
    
    # Удаляем старое поле full_name
    op.drop_column('employees', 'full_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('educations', 'end_year',
               existing_type=sa.String(length=4),
               type_=sa.VARCHAR(length=7),
               existing_nullable=True)
    op.alter_column('educations', 'start_year',
               existing_type=sa.String(length=4),
               type_=sa.VARCHAR(length=7),
               existing_nullable=True)
    
    # Возвращаем обратно к full_name
    # Добавляем поле full_name
    op.add_column('employees', sa.Column('full_name', sa.String(), nullable=True))
    
    # Объединяем поля в full_name
    op.execute("""
        UPDATE employees 
        SET full_name = CONCAT_WS(' ', first_name, middle_name, last_name)
        WHERE first_name IS NOT NULL AND last_name IS NOT NULL
    """)
    
    # Делаем поле обязательным
    op.alter_column('employees', 'full_name', nullable=False)
    
    # Удаляем новые поля
    op.drop_column('employees', 'middle_name')
    op.drop_column('employees', 'last_name')
    op.drop_column('employees', 'first_name')
    # ### end Alembic commands ###
